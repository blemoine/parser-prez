// Generated from src/jsonAntlr.g4 by ANTLR 4.9.1
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u000e{\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007",
    "\u0003\b\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\n\u0003\n\u0003\n\u0003\u000b",
    "\u0005\u000bE\n\u000b\u0003\u000b\u0003\u000b\u0003\u000b\u0006\u000b",
    "J\n\u000b\r\u000b\u000e\u000bK\u0005\u000bN\n\u000b\u0003\f\u0003\f",
    "\u0003\f\u0007\fS\n\f\f\f\u000e\fV\u000b\f\u0005\fX\n\f\u0003\r\u0003",
    "\r\u0003\r\u0007\r]\n\r\f\r\u000e\r`\u000b\r\u0003\r\u0003\r\u0003\u000e",
    "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0005\u000fi\n\u000f",
    "\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0006\u0013",
    "v\n\u0013\r\u0013\u000e\u0013w\u0003\u0013\u0003\u0013\u0002\u0002\u0014",
    "\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t",
    "\u0011\n\u0013\u000b\u0015\f\u0017\u0002\u0019\r\u001b\u0002\u001d\u0002",
    "\u001f\u0002!\u0002#\u0002%\u000e\u0003\u0002\b\u0003\u00023;\u0003",
    "\u00022;\n\u0002$$11^^ddhhppttvv\u0005\u00022;CHch\u0005\u0002\u0002",
    "!$$^^\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002}\u0002\u0003\u0003\u0002",
    "\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002",
    "\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002",
    "\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002",
    "\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002",
    "\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002",
    "\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0003\'\u0003\u0002\u0002",
    "\u0002\u0005)\u0003\u0002\u0002\u0002\u0007+\u0003\u0002\u0002\u0002",
    "\t-\u0003\u0002\u0002\u0002\u000b/\u0003\u0002\u0002\u0002\r1\u0003",
    "\u0002\u0002\u0002\u000f3\u0003\u0002\u0002\u0002\u00118\u0003\u0002",
    "\u0002\u0002\u0013>\u0003\u0002\u0002\u0002\u0015D\u0003\u0002\u0002",
    "\u0002\u0017W\u0003\u0002\u0002\u0002\u0019Y\u0003\u0002\u0002\u0002",
    "\u001bc\u0003\u0002\u0002\u0002\u001de\u0003\u0002\u0002\u0002\u001f",
    "j\u0003\u0002\u0002\u0002!p\u0003\u0002\u0002\u0002#r\u0003\u0002\u0002",
    "\u0002%u\u0003\u0002\u0002\u0002\'(\u0007}\u0002\u0002(\u0004\u0003",
    "\u0002\u0002\u0002)*\u0007.\u0002\u0002*\u0006\u0003\u0002\u0002\u0002",
    "+,\u0007\u007f\u0002\u0002,\b\u0003\u0002\u0002\u0002-.\u0007<\u0002",
    "\u0002.\n\u0003\u0002\u0002\u0002/0\u0007]\u0002\u00020\f\u0003\u0002",
    "\u0002\u000212\u0007_\u0002\u00022\u000e\u0003\u0002\u0002\u000234\u0007",
    "v\u0002\u000245\u0007t\u0002\u000256\u0007w\u0002\u000267\u0007g\u0002",
    "\u00027\u0010\u0003\u0002\u0002\u000289\u0007h\u0002\u00029:\u0007c",
    "\u0002\u0002:;\u0007n\u0002\u0002;<\u0007u\u0002\u0002<=\u0007g\u0002",
    "\u0002=\u0012\u0003\u0002\u0002\u0002>?\u0007p\u0002\u0002?@\u0007w",
    "\u0002\u0002@A\u0007n\u0002\u0002AB\u0007n\u0002\u0002B\u0014\u0003",
    "\u0002\u0002\u0002CE\u0007/\u0002\u0002DC\u0003\u0002\u0002\u0002DE",
    "\u0003\u0002\u0002\u0002EF\u0003\u0002\u0002\u0002FM\u0005\u0017\f\u0002",
    "GI\u00070\u0002\u0002HJ\u0005\u001b\u000e\u0002IH\u0003\u0002\u0002",
    "\u0002JK\u0003\u0002\u0002\u0002KI\u0003\u0002\u0002\u0002KL\u0003\u0002",
    "\u0002\u0002LN\u0003\u0002\u0002\u0002MG\u0003\u0002\u0002\u0002MN\u0003",
    "\u0002\u0002\u0002N\u0016\u0003\u0002\u0002\u0002OX\u00072\u0002\u0002",
    "PT\t\u0002\u0002\u0002QS\u0005\u001b\u000e\u0002RQ\u0003\u0002\u0002",
    "\u0002SV\u0003\u0002\u0002\u0002TR\u0003\u0002\u0002\u0002TU\u0003\u0002",
    "\u0002\u0002UX\u0003\u0002\u0002\u0002VT\u0003\u0002\u0002\u0002WO\u0003",
    "\u0002\u0002\u0002WP\u0003\u0002\u0002\u0002X\u0018\u0003\u0002\u0002",
    "\u0002Y^\u0007$\u0002\u0002Z]\u0005\u001d\u000f\u0002[]\u0005#\u0012",
    "\u0002\\Z\u0003\u0002\u0002\u0002\\[\u0003\u0002\u0002\u0002]`\u0003",
    "\u0002\u0002\u0002^\\\u0003\u0002\u0002\u0002^_\u0003\u0002\u0002\u0002",
    "_a\u0003\u0002\u0002\u0002`^\u0003\u0002\u0002\u0002ab\u0007$\u0002",
    "\u0002b\u001a\u0003\u0002\u0002\u0002cd\t\u0003\u0002\u0002d\u001c\u0003",
    "\u0002\u0002\u0002eh\u0007^\u0002\u0002fi\t\u0004\u0002\u0002gi\u0005",
    "\u001f\u0010\u0002hf\u0003\u0002\u0002\u0002hg\u0003\u0002\u0002\u0002",
    "i\u001e\u0003\u0002\u0002\u0002jk\u0007w\u0002\u0002kl\u0005!\u0011",
    "\u0002lm\u0005!\u0011\u0002mn\u0005!\u0011\u0002no\u0005!\u0011\u0002",
    "o \u0003\u0002\u0002\u0002pq\t\u0005\u0002\u0002q\"\u0003\u0002\u0002",
    "\u0002rs\n\u0006\u0002\u0002s$\u0003\u0002\u0002\u0002tv\t\u0007\u0002",
    "\u0002ut\u0003\u0002\u0002\u0002vw\u0003\u0002\u0002\u0002wu\u0003\u0002",
    "\u0002\u0002wx\u0003\u0002\u0002\u0002xy\u0003\u0002\u0002\u0002yz\b",
    "\u0013\u0002\u0002z&\u0003\u0002\u0002\u0002\f\u0002DKMTW\\^hw\u0003",
    "\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class jsonAntlrLexer extends antlr4.Lexer {

    static grammarFileName = "jsonAntlr.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'{'", "','", "'}'", "':'", "'['", "']'", 
                         "'true'", "'false'", "'null'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, "NUMBER", "STRING", "WHITESPACE" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "NUMBER", "INT", "STRING", "DIGIT", 
                      "ESC", "UNICODE", "HEX", "SAFECODEPOINT", "WHITESPACE" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

jsonAntlrLexer.EOF = antlr4.Token.EOF;
jsonAntlrLexer.T__0 = 1;
jsonAntlrLexer.T__1 = 2;
jsonAntlrLexer.T__2 = 3;
jsonAntlrLexer.T__3 = 4;
jsonAntlrLexer.T__4 = 5;
jsonAntlrLexer.T__5 = 6;
jsonAntlrLexer.T__6 = 7;
jsonAntlrLexer.T__7 = 8;
jsonAntlrLexer.T__8 = 9;
jsonAntlrLexer.NUMBER = 10;
jsonAntlrLexer.STRING = 11;
jsonAntlrLexer.WHITESPACE = 12;



